[{"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Header\\index.js":"1","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Header\\styles.js":"2","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Footer\\index.js":"3","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Footer\\styles.js":"4","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Home\\index.js":"5","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\FilterCard\\index.js":"6","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\FilterCard\\styles.js":"7","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Home\\styles.js":"8","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\TaskCard\\styles.js":"9","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\TaskCard\\index.js":"10","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\services\\api.js":"11","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\utils\\typeIcons.js":"12","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Task\\index.js":"13","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\index.js":"14","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Task\\styles.js":"15","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\routes\\index.js":"16"},{"size":1027,"mtime":1610919455629,"results":"17","hashOfConfig":"18"},{"size":1474,"mtime":1610893943235,"results":"19","hashOfConfig":"18"},{"size":240,"mtime":1610830990809,"results":"20","hashOfConfig":"18"},{"size":350,"mtime":1610908658172,"results":"21","hashOfConfig":"18"},{"size":3087,"mtime":1610920631313,"results":"22","hashOfConfig":"18"},{"size":358,"mtime":1610835707711,"results":"23","hashOfConfig":"18"},{"size":592,"mtime":1610836255766,"results":"24","hashOfConfig":"18"},{"size":713,"mtime":1610920275381,"results":"25","hashOfConfig":"18"},{"size":992,"mtime":1610881909395,"results":"26","hashOfConfig":"18"},{"size":736,"mtime":1610888921207,"results":"27","hashOfConfig":"18"},{"size":125,"mtime":1610884837183,"results":"28","hashOfConfig":"18"},{"size":654,"mtime":1610886316536,"results":"29","hashOfConfig":"18"},{"size":4722,"mtime":1610914054476,"results":"30","hashOfConfig":"18"},{"size":218,"mtime":1610919237837,"results":"31","hashOfConfig":"18"},{"size":2308,"mtime":1610918530435,"results":"32","hashOfConfig":"18"},{"size":454,"mtime":1610919308283,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pgg0sy",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Header\\index.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Header\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Footer\\index.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\Footer\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Home\\index.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\FilterCard\\index.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\FilterCard\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Home\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\TaskCard\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\components\\TaskCard\\index.js",["68","69"],"import React, { useMemo } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { Container, TopCard, BottomCard } from './styles';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\nconst TaskCard = ({ type, title, when }) => {\r\n\r\n    const date = useMemo(() => format(new Date(when), 'dd/MM/yyyy'));\r\n    const hour = useMemo(() => format(new Date(when), 'HH:mm'));\r\n\r\n    return (\r\n        <Container>\r\n            <TopCard>\r\n                <img src={typeIcons[type]} alt=\"\" />\r\n                <h3>{title}</h3>\r\n            </TopCard>\r\n            <BottomCard>\r\n                <strong>{date}</strong>\r\n                <span>{hour}</span>\r\n            </BottomCard>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TaskCard;","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\services\\api.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\utils\\typeIcons.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Task\\index.js",["70","71"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport TypeIcons from '../../utils/typeIcons';\r\nimport { Container, Form, TypeIcon, Input, TextArea, Options, Save } from './styles';\r\n\r\n\r\nconst Task = () => {\r\n    const [lateCount, setLateCount] = useState();\r\n    const [type, setType] = useState();\r\n    // const [id, setId] = useState();\r\n    const [done, setDone] = useState(false);\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [date, setDate] = useState();\r\n    const [hour, setHour] = useState();\r\n    const [macaddress] = useState('00-00-00-00-00-00');\r\n\r\n\r\n\r\n    //consulta no banco de dados\r\n    const lateVerify = useCallback(async () => {\r\n        await api.get(`/task/filter/late/00-00-00-00-00-00`)\r\n            .then(response => {\r\n                setLateCount(response.data.length);\r\n            });\r\n    }, []);\r\n\r\n    //salvando banco de dados\r\n    const save = useCallback(async () => {\r\n        await api.post('/task', {\r\n            macaddress,\r\n            type,\r\n            title,\r\n            description,\r\n            when: `${date}T${hour}:00.000`\r\n        }).then(() =>\r\n            alert('ok')\r\n        ).catch(response => {\r\n            alert(response.data.error)\r\n        })\r\n    }, [macaddress, type, title, description, date, hour]);\r\n\r\n    useEffect(() => {\r\n        lateVerify();\r\n    }, [lateVerify]);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Header lateCount={lateCount} clickNotification={Notification} />\r\n            <Form>\r\n                <TypeIcon>\r\n                    {TypeIcons.map((icon, index) => (\r\n                        index > 0 &&\r\n                        <button type=\"button\" onClick={() => (setType(index))}>\r\n                            <img\r\n                                src={icon} alt=\"Tipo da tarefa\"\r\n                                className={type && type !== index && 'inative'}\r\n                            />\r\n                        </button>\r\n                    ))}\r\n                </TypeIcon>\r\n                <Input>\r\n                    <span>Titulo</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Titilo da tarefa...\"\r\n                        onChange={(e) => {\r\n                            setTitle(e.target.value)\r\n                        }}\r\n                        value={title} //mudando o estado\r\n                    />\r\n                </Input>\r\n\r\n                <TextArea>\r\n                    <span>Descrição</span>\r\n                    <textarea\r\n                        cols=\"30\"\r\n                        rows=\"5\"\r\n                        placeholder=\"Detalhes da tarefa\"\r\n                        onChange={(e) => {\r\n                            setDescription(e.target.value)\r\n                        }}\r\n                        value={description} //mudando o estado\r\n                    />\r\n\r\n                </TextArea>\r\n\r\n                <Input>\r\n                    <span>Data</span>\r\n                    <input\r\n                        type=\"date\"\r\n                        placeholder=\"Digite o titilo da tarefa\"\r\n                        onChange={(e) => {\r\n                            setDate(e.target.value)\r\n                        }}\r\n                        value={date} //mudando o estado\r\n\r\n                    />\r\n                </Input>\r\n\r\n                <Input>\r\n                    <span>Hora</span>\r\n                    <input\r\n                        type=\"time\"\r\n                        placeholder=\"Digite o titilo da tarefa\"\r\n                        onChange={(e) => {\r\n                            setHour(e.target.value)\r\n                        }}\r\n                        value={hour} //mudando o estado\r\n\r\n                    />\r\n                </Input>\r\n\r\n                <Options>\r\n                    <div>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={done}\r\n                            onChange={() => { setDone(!done) }} // verdadeiro ou false\r\n                        />\r\n                        <span>CONCLUIDO</span>\r\n                    </div>\r\n                    <button type=\"button\">EXCLUIR</button>\r\n                </Options>\r\n\r\n                <Save>\r\n                    <button\r\n                        type=\"button\" onClick={save}>\r\n                        Salvar\r\n                        </button>\r\n                </Save>\r\n            </Form>\r\n            <Footer />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Task;","C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\index.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\views\\Task\\styles.js",[],"C:\\Users\\dev\\www\\14 - Projeto lista de tarefas\\web\\src\\routes\\index.js",[],{"ruleId":"72","severity":1,"message":"73","line":9,"column":18,"nodeType":"74","endLine":9,"endColumn":25},{"ruleId":"72","severity":1,"message":"73","line":10,"column":18,"nodeType":"74","endLine":10,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":12,"column":12,"nodeType":"74","messageId":"77","endLine":12,"endColumn":14},{"ruleId":"75","severity":1,"message":"78","line":12,"column":16,"nodeType":"74","messageId":"77","endLine":12,"endColumn":21},"react-hooks/exhaustive-deps","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used."]